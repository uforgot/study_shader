@charset "utf-8";

@mixin set-mq($args...) {
  $media-type: 'only screen';
  $media-type-key: 'media-type';
  $args: keywords($args);
  $expr: '';

  //@debug 'set-mq::' $media-type $media-type-key $args $expr;

  @if map-has-key($args, $media-type-key) {
    $media-type: map-get($args, $media-type-key);
    $args: map-remove($args, $media-type-key);
  }

  @each $key, $value in $args {
    @if $value {
      $expr: "#{$expr} and (#{$key}: #{$value})";
    }
  }

  $temp: #{$media-type} #{$expr};

  @media #{$temp} {
    @content;
  }
}

@mixin break-point-max($max) {
  @include set-mq($max-width: $max) {
    @content;
  }
}

@mixin break-point-between($min, $max) {
  @include set-mq($min-width: $min, $max-width: $max) {
    @content;
  }
}

@mixin break-point-min($min) {
  @include set-mq($min-width: $min) {
    @content;
  }
}

// --- hdpi --------------------------------------------------------------------

@mixin hdpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min-resolution: #{round($ratio*96)}dpi) {
    @content;
  }
}

// --- hd line --------------------------------------------------------------------

@mixin hdLine($property) {
  @include hdpi(1.5) {
    #{$property}: 0.667px;
  }
  @include hdpi(2) {
    #{$property}: 1px;
  }
}

// --- orientation -------------------------------------------------------------
@mixin landscape() {
  @include set-mq($orientation: landscape) {
    @content;
  }
}

@mixin portrait() {
  @include set-mq($orientation: portrait) {
    @content;
  }
}


@mixin set-prop-set(
  $property,
  $desktop, $mobile
) {
  #{$property}: $mobile;
  @include break-point-min($max-mobile-width) {
    #{$property}: $desktop;
  }
}
